version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: smsgw-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: smsgw
      MYSQL_USER: smsgw
      MYSQL_PASSWORD: smsgwpass
      TZ: Asia/Tehran
    command: ["--server-id=1","--binlog_format=ROW","--log-bin=mysql-bin","--binlog_row_image=FULL"]
    ports:
      - "3306:3306"
    volumes:
      - smsgw-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -usmsgw -psmsgwpass --silent"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    container_name: smsgw-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - smsgw-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: smsgw-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@smsgw-kafka:9093"

      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094,CONTROLLER://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://smsgw-kafka:9092,PLAINTEXT_HOST://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"

      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - smsgw-kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/9092'"]
      interval: 10s
      timeout: 5s
      retries: 20

  connect:
    image: debezium/connect:2.6
    container_name: smsgw-connect
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: "smsgw-kafka:9092"
      GROUP_ID: "smsgw-connect"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      REST_ADVERTISED_HOST_NAME: "smsgw-connect"
      TZ: Asia/Tehran
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8083/connectors || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  clickhouse:
    image: clickhouse/clickhouse-server:24.7
    container_name: smsgw-clickhouse
    restart: unless-stopped
    environment:
      - CLICKHOUSE_DB=smsgw
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=
      - TZ=Asia/Tehran
    ports:
      - "8123:8123"  # HTTP
      - "9000:9000"  # Native
    volumes:
      - smsgw-clickhouse-data:/var/lib/clickhouse
      - ./deploy/clickhouse/init:/docker-entrypoint-initdb.d
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  smsgw-mysql-data:
  smsgw-redis-data:
  smsgw-kafka-data:
  smsgw-clickhouse-data: